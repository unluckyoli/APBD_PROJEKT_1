// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240628220318_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasDiscriminator().HasValue("Client");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("SoftwareContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SoftwareContractId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Black Friday",
                            Percentage = 10m,
                            ProductId = 1,
                            StartDate = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2023, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cyber Monday",
                            Percentage = 15m,
                            ProductId = 2,
                            StartDate = new DateTime(2023, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christmas",
                            Percentage = 20m,
                            ProductId = 3,
                            StartDate = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Year Sale",
                            Percentage = 25m,
                            ProductId = 4,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 500m,
                            ContractId = 1,
                            PaymentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 600m,
                            ContractId = 2,
                            PaymentDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 800m,
                            ContractId = 4,
                            PaymentDate = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasDiscriminator().HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.SoftwareContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            EndDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Price = 500m,
                            SoftwareId = 1,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            EndDate = new DateTime(2024, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Price = 600m,
                            SoftwareId = 2,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            EndDate = new DateTime(2024, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = false,
                            Price = 700m,
                            SoftwareId = 3,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            EndDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Price = 800m,
                            SoftwareId = 4,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.CompanyClient", b =>
                {
                    b.HasBaseType("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Client");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasDiscriminator().HasValue("CompanyClient");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Address = "Lazienkowska 3",
                            Email = "company1@gmail.com",
                            PhoneNumber = "1111111111",
                            CompanyName = "Legia Warszawa",
                            KRS = "12345678953"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Marysin 4",
                            Email = "company2@gmail.com",
                            PhoneNumber = "2222222222",
                            CompanyName = "FC Barcelona",
                            KRS = "987654321"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Mantra 2",
                            Email = "company3@gmail.com",
                            PhoneNumber = "3333333333",
                            CompanyName = "Nike",
                            KRS = "123123123"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Slojewskiego 214",
                            Email = "company4@gmail.com",
                            PhoneNumber = "4444444444",
                            CompanyName = "Levis",
                            KRS = "321321321"
                        });
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.IndividualClient", b =>
                {
                    b.HasBaseType("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Client");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasDiscriminator().HasValue("IndividualClient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Konwiktorska 1",
                            Email = "polonia@gmail.com",
                            PhoneNumber = "1234567890",
                            FirstName = "Fra",
                            LastName = "Jer",
                            PESEL = "12345678901"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Barcelona 10",
                            Email = "leo.messi@gmail.com",
                            PhoneNumber = "0987654321",
                            FirstName = "Leo",
                            LastName = "Messi",
                            PESEL = "10987654321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Madrid 7",
                            Email = "cristron@gmail.com",
                            PhoneNumber = "1234509876",
                            FirstName = "Cristiano",
                            LastName = "Ronaldo",
                            PESEL = "12345098765"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Goralska 3",
                            Email = "goral@gmail.com",
                            PhoneNumber = "0987612345",
                            FirstName = "God",
                            LastName = "Thiago",
                            PESEL = "09876123450"
                        });
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Software", b =>
                {
                    b.HasBaseType("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Software");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Software One",
                            Price = 100m,
                            Category = "Finance",
                            Version = "1.1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Software Two",
                            Price = 200m,
                            Category = "Education",
                            Version = "2.6"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Software Three",
                            Price = 300m,
                            Category = "Healthcare",
                            Version = "3.9"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Software Four",
                            Price = 400m,
                            Category = "Sport",
                            Version = "4.0.5"
                        });
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Discount", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.SoftwareContract", null)
                        .WithMany("Discounts")
                        .HasForeignKey("SoftwareContractId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Payment", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.SoftwareContract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.SoftwareContract", b =>
                {
                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Software", "Software")
                        .WithMany()
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.Product", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("System_Uznawania_Przychodów_dla_dużej_korporacji_ABC.Models.SoftwareContract", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
